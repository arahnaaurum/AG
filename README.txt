ТЗ:
1. Сайт на React + Redux и TypeScript
2. На главной странице отображается список карточек пользователей.
  * для списка пользователей добавить пагинацию
  * добавить возможность ставить лайки пользователям, которые сохраняются  после перезагрузки страницы
3. По клику на каждую карточку открывается страница с детальной информацией о пользователе.
  * на странице пользователя добавить загрузку аватарки
4. Список пользователей доступен только для зарегистрированных пользователей.
- Регистрация и авторизация должны осуществляться через email/password.
- Проверять на валидность все входные данные и выводить ошибку при невалидных данных
- Токен необходимо сохранять в памяти браузера и удалять после нажатия на кнопку “выход”
5. Макет: https://www.figma.com/file/Nw9TJYCeh8Tmi9cX3KxyqO/%D0%A2%D0%B5%D1%81%D1%82%D0%BE%D0%B2%D0%BE%D0%B5.-%D0%A4%D1%80%D0%BE%D0%BD%D1%82%D0%B5%D0%BD%D0%B4?node-id=0%3A1
6. API: https://reqres.in/

Стэк: React, Redux toolkit, TypeScript

Описание проекта:
1. SPA включает 3 страницы:
  - Форма регистрации/авторизации для неавторизированного пользователя;
  - Главная страница со списком пользователей
  - Страница пользователя.
  ВАЖНО: в качестве API использовался https://reqres.in/.
  Поскольку его функционал ограничен, в проекте в некоторых местах использовались mock-данные.
  Это отмеченно комментариями в коде. Также некоторые замечания см. ниже.

2. Форма регистрации:
  - совмещает встроенные и кастомные проверки полей (имя, email, пароль, подтверждение пароля);
  - выводит информацию об ошибках;
  - при верном заполнении отправляет запрос на регистрацию.
  В ответе приходят токен и id пользователя, сохраняемые в браузере (localStorage).
  ВАЖНО: https://reqres.in/api/register пропускает POST-запросы только от предустановленных пользователей.
  В связи с этим для отправки запроса используются данные пользователя "Eve Holt" (id 4).
  В userAPI.ts в комментариях указано, каким образом формировался бы запрос к реальному API.
  - Токен/id удаляются при нажатии кнопки "Выход".

3. Главная страница:
  - открывается авторизованному пользователю / после прохождения регистрации;
  - содержит карточки пользователей, по клику на которые осуществляется переход на страницу пользователя.
  - пагинация реализована в соответствии с макетом в виде кнопки "Показать еще". По клику на нее открываются новые карточки.
  - есть возможность ставить лайки, сохраняющиеся при перезагрузке.

4. Страница пользователя:
  - выводит информацию о пользователе согласно макету.
  Для той информации, которая отсутствует в https://reqres.in/api/users, выводятся mock-данные.
  - Есть возможность вернуться назад (кнопка "Назад" в верхнем левом углу экрана)
  - Есть возможности изменить аватар, если id авторизованного пользователя и id пользователя, чья страница открыта, совпадают.
  ВАЖНО: В данном случае это будет пользователь Eve Holt, см. выше.
  Порядок изменения аватара (а также причины выбранной реализации) подробнее описан комментарии к коду в changeAvatar.tsx.

  5. Верстка сайта адаптивная.